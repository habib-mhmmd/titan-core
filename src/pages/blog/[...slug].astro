---
import { getCollection, render } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import CategoryPill from '@components/ui/CategoryPill.astro';
import Date from '@components/ui/Date.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        props: { post },
    }));
}

const { post } = Astro.props;
const { Content } = await render(post);

// Use SEO data from frontmatter if available, fallback to regular post data
const seoTitle = post.data.seo?.title || post.data.title;
const seoDescription = post.data.seo?.description || post.data.excerpt;

// For SEO image, use the seo.image if provided, otherwise use the featured image
// The Layout component expects a string for the image, so we need to handle that
let seoImage: string | undefined = post.data.seo?.image;

// If seoImage is provided but not an absolute URL, make it absolute
if (seoImage && !seoImage.startsWith('http')) {
    const siteUrl = import.meta.env.SITE || 'https://titan-core.vercel.app';
    seoImage = new URL(seoImage.startsWith('/') ? seoImage : `/${seoImage}`, siteUrl).toString();
}
// If no SEO image is specified, but we have a featured image, use its URL
else if (!seoImage && post.data.featuredImage) {
    // For Astro image objects, we need to create an absolute URL
    const siteUrl = import.meta.env.SITE || 'https://titan-core.vercel.app';
    seoImage = new URL(post.data.featuredImage.src, siteUrl).toString();
}
---

<Layout title={seoTitle} description={seoDescription} image={seoImage}>
    <article class="site-container--small md:site-container-xsmall mx-auto px-4 prose relative z-10 pb-base">
        <!-- Breadcrumb -->
        <nav class="hidden md:flex items-center gap-2 text-sm font-medium mt-24 md:mt-36">
            <a href="/" class="flex items-center text-body-light hover:text-body-base transition">
                Home
            </a>
            <span class="text-body-light">›</span>
            <a href="/blog" class="text-body-light hover:text-body-base transition">Projects</a>
            <span class="text-body-light">›</span>
            <span class="text-body-base truncate max-w-xs block">{post.data.seo?.title}</span>
        </nav>
        <div class="relative aspect-[16/9] mx-auto mt-28 md:mt-8 mb-6 md:mb-16">
            {post.data.featuredImage && (
                <Image
                    src={post.data.featuredImage}
                    alt=""
                    width={1920}
                    height={1080}
                    class="object-cover w-full h-full rounded-lg border border-background-light"
                    quality={100}
                    format="webp"
                />
            )}
        </div>
        <div class="mt-4 md:mt-8 mb-10 md:mb-12 text-center">
            <h2 class="text-body-base mb-4">{post.data.title}</h2>
            <div class="flex flex-col md:flex-row justify-center md:items-center gap-4 text-body-light text-sm font-medium">
                <!-- items-center justify-center  asli -->
                 <!-- flex text-left md:items-center md:justify-center md:text-center gap-4 text-body-light text-sm font-medium -->
                <Date date={post.data.publishDate} />
                {
                    post.data.categories && (
                        <div class="flex flex-wrap gap-2">
                            {post.data.categories.map((category) => (
                                <CategoryPill category={category} />
                            ))}
                        </div>
                    )
                }
            </div>
        </div>


        <div class="mt-8 markdown">
            <Content />
        </div>

        <!-- overlay untuk zoom -->
        <div id="imgOverlay" class="fixed inset-0 bg-black/80 pt-0 md:pt-20 hidden justify-center items-center z-50 transition-opacity duration-300">
            <img id="imgOverlayTarget" class="max-w-[90%] max-h-[90%] rounded-lg cursor-zoom-out" />
        </div>
    </article>

    <!-- cursor biar keliatan bisa diklik -->
    <style is:global>
    .markdown img { cursor: zoom-in; }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const overlay = document.getElementById("imgOverlay");
            const overlayImg = document.getElementById("imgOverlayTarget");

            if (!(overlay instanceof HTMLElement) || !(overlayImg instanceof HTMLImageElement)) return;

            const markdown = document.querySelector(".markdown");
            if (!markdown) return;

            // buka overlay
            markdown.addEventListener("click", (e) => {
            const target = e.target;
            if (target instanceof HTMLImageElement) {
                overlayImg.src = target.currentSrc || target.src;

                // tampilkan overlay + kunci scroll body
                overlay.classList.remove("hidden", "opacity-0");
                overlay.classList.add("flex", "opacity-100");
                document.body.classList.add("overflow-hidden"); 
            }
            });

            // klik overlay → tutup
            overlay.addEventListener("click", () => {
            overlay.classList.remove("opacity-100");
            overlay.classList.add("opacity-0");

            // kasih delay biar transisi smooth sebelum di-hide
            setTimeout(() => {
                overlay.classList.remove("flex");
                overlay.classList.add("hidden");
                overlayImg.removeAttribute("src");
                document.body.classList.remove("overflow-hidden"); 
            }, 300); // sama dengan duration-300
            });
        });
    </script>

</Layout>
