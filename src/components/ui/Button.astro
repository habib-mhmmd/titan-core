---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'accent' | 'ghostLight' | 'ghostDark';
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  class?: string;
  id?: string;
  type?: 'button' | 'submit' | 'reset';
  target?: string;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  disabled = false,
  class: className = '',
  id,
  type = 'button',
  target,
  ...rest
} = Astro.props;

const baseStyles = 'group relative inline-flex overflow-hidden items-center justify-center rounded-[var(--border-radius-small)] md:rounded-[var(--border-radius-base)] font-medium transition-all duration-300 ease-out focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 rounded-md flex items-center gap-2';


const variants = {
  primary: 'bg-primary text-body-base hover:bg-primary-dark hover:font-medium hover:text-primary-light',
  secondary: 'bg-[var(--color-background-dark)] text-body-base hover:bg-[var(--color-body-base)] hover:font-medium hover:text-background transition-all duration-300',
  accent: 'bg-accent text-white hover:opacity-90 focus-visible:ring-accent hover:ring-2 hover:ring-accent hover:ring-offset-2',
  ghostLight: 'text-white ring-2 ring-white focus-visible:ring-white hover:ring-2 hover:ring-black hover:ring-offset-2',
  ghostDark: 'text-body-base ring-2 ring-text focus-visible:ring-text hover:ring-2 hover:ring-black hover:ring-offset-2',
};

const sizes = {
  sm: 'h-9 px-2 text-xsmall',
  md: 'h-11 px-4 text-small',
  lg: 'h-12 px-6 text-small'
};

const classes = [
  baseStyles,
  variants[variant],
  sizes[size],
  className
].join(' ');

const Element = href ? 'a' : 'button';
---

<Element
  {...rest}
  href={href}
  type={!href ? type : undefined}
  class={classes}
  disabled={disabled}
  aria-disabled={disabled}
  {...(target && { target, rel: target === '_blank' ? 'noopener noreferrer' : undefined })}
>
  <slot />
</Element>

