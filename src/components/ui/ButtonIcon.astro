---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'accent' | 'ghostLight' | 'ghostDark';
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  class?: string;
  type?: 'button' | 'submit' | 'reset';
  target?: string;

  // tambahan props baru
  iconPath?: string; // inline <path d="..." />
  iconUrl?: string;  // file .svg
}

const {
  href,
  variant = 'secondary',
  size = 'md',
  disabled = false,
  class: className = '',
  type = 'button',
  target,
  iconPath,
  iconUrl,
  ...rest
} = Astro.props;

const baseStyles = 'group relative inline-flex overflow-hidden items-center justify-center rounded-border-small font-medium transition-all duration-300 ease-out focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 rounded-md flex items-center gap-2';

const variants = {
  primary: 'bg-background-base text-white hover:bg-primary-light focus-visible:ring-primary hover:ring-2 hover:ring-primary hover:ring-offset-2',
  secondary: 'bg-background-base text-white hover:bg-secondary-light focus-visible:ring-secondary hover:ring-2 hover:ring-secondary hover:ring-offset-2',
  accent: 'bg-accent text-white hover:opacity-90 focus-visible:ring-accent hover:ring-2 hover:ring-accent hover:ring-offset-2',
  ghostLight: 'text-white ring-2 ring-white focus-visible:ring-white hover:ring-2 hover:ring-black hover:ring-offset-2',
  ghostDark: 'text-body-base ring-2 ring-text focus-visible:ring-text hover:ring-2 hover:ring-black hover:ring-offset-2',
};

const sizes = {
  sm: 'w-9 h-9 text-xsmall',
  md: 'w-10 h-10 text-small',
  lg: 'w-11 h-11 text-base'
};

const classes = [
  baseStyles,
  variants[variant],
  sizes[size],
  className
].join(' ');

const Element = href ? 'a' : 'button';
---

<Element
  {...rest}
  href={href}
  type={!href ? type : undefined}
  class={classes}
  disabled={disabled}
  aria-disabled={disabled}
  {...(target && { target, rel: target === '_blank' ? 'noopener noreferrer' : undefined })}
>
  {iconPath && (
    <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="color: var(--color-whites);" >
      <path d={iconPath} />
    </svg>
  )}

  {iconUrl && (
    <img src={iconUrl} alt="" class="w-5 h-5" />
  )}

</Element>
