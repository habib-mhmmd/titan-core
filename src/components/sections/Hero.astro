---
import Button from '@components/ui/ButtonIcon.astro';
import { Image } from 'astro:assets';

interface HeroContent {
    intro: string;
    title: string;
    description: string;
    skills:string[];
    buttons?: {
        icon?: {
            path?: string; // inline SVG path
            url?: string;  // link ke file svg
        };
        //text: string;
        link: string;
        variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        size?: 'sm'|'md'|'lg';
        target?: string;
    }[];
    backgroundImage?: string | any; // Using any for now to handle both string paths and imported images
    overlayOpacity?: number; // Value between 0 and 1
}

interface Props {
    content: HeroContent;
}

const { content } = Astro.props;
const opacity = content.overlayOpacity ?? 1; // Default opacity if not specified
---

<section class="header-offset relative">
    <!-- {content.backgroundImage && (
        <div class="absolute inset-0 left-0 top-0 w-full h-full overflow-hidden">
            <Image
                src={content.backgroundImage}
                alt=""
                width={1920}
                height={1080}
                class="w-full h-full object-cover"
                quality={70}
                format="webp"
                loading="eager"
                decoding="async"
            />
            <div
                class="hero-background absolute inset-0 left-0 top-0 w-full h-full overflow-hidden"
                style={`opacity: ${opacity};`}
            ></div>
        </div>
    )} -->

    <div class="absolute inset-0 left-0 top-0 w-full h-full hero-background"></div>
    <!-- site-container mx-auto px-6 py-large relative z-10 flex flex-col md:items-center md:justify-center md:text-center -->
    <div class="site-container mx-auto px-4 md:px-12 md:py-large sm:py-base relative z-10 flex flex-col text-left md:items-center md:justify-center md:text-center">
        <h5 class="sm:mt-6" data-aos="fade-up" style="color: var(--color-whites);">{content.intro}</h5>
        <h1 class="mt-2 text-balance whitespace-pre-line" data-aos="fade-up" data-aos-delay="50" style="color: var(--color-whites);">
            {content.title}
        </h1>
        <p class="mt-2 md:mt-4 px-0 lg:px-8 xl:px-12 2xl:px-16 text-balance" data-aos="fade-up" data-aos-delay="100" style="color: var(--color-grays-light);">{content.description}</p>
        
        {/* GRID SKILLS */}
        {content.skills && content.skills.length > 0 && (
        <div class="sm:mt-2 md:mt-4 grid gap-3 sm:gap-2 md:gap-6" data-aos="fade-up" data-aos-delay="100">
            
            {/* baris 1 */}
            <div class="grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-2 md:gap-6">
            {content.skills.slice(0,4).map((skill) => (
                <h4 
                    class="text-body-light hover:text-body-base transition-colors duration-300"
                    
                >
                {skill}
                </h4>
            ))}
            </div>

            {/* baris 2 */}
            <div class="flex md:justify-center gap-3 sm:gap-2 md:gap-6">
            {content.skills.slice(4).map((skill) => (
                <h4
                    class="text-body-light hover:text-body-base transition-colors duration-300"
                    
                    /*style="color: var(--color-grays-light);"*/
                >
                {skill}
                </h4>
            ))}
            </div>
        </div>
        )}


        {content.buttons && content.buttons.length > 0 && (
            <div class="flex flex-wrap gap-5 mt-8" data-aos="fade-up" data-aos-delay="150">
                {content.buttons.map((button) => (
                    <Button
                        href={button.link}
                        target={button.target || '_self'}
                        variant={button.variant || 'primary'}
                        size={button.size ||'lg'}
                        iconPath={button.icon?.path}
                        iconUrl={button.icon?.url}
                    >
                        {/* {button.text} */}
                    </Button>
                ))}
            </div>
        )}
    </div>
</section>
