---
import type { Feature } from '@data/features';
import Button from '@components/ui/Button.astro';
import Eyebrow from '@components/ui/Eyebrow.astro';

export interface Props {
    content: {
        //eyebrow?: string;
        title?: string;
        description?: string;
        button?: {
            text: string;
            link: string;
            variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
        };
        features: Feature[];
    };
}
const {
    content: {
        //eyebrow,
        title,
        description,
        button,
        features
    }
} = Astro.props;
---

<section 
    class="relative py-16"
    style="background-color: var(--color-background); color: var(--color-text, #fff);"
>
    <div class="site-container px-4">
        {(title || description) && (
            <div class="text-center mb-16 max-w-3xl mx-auto">
                
                {title && <h2 data-aos="fade-up">{title}</h2>}
                {description && (
                    <p 
                        class="mt-4 opacity-90"
                        data-aos="fade-up"
                        data-aos-delay="100"
                    >
                        {description}
                    </p>
                )}
                {button && (
                    <div class="mt-8" data-aos="fade-up" data-aos-delay="200">
                        <Button
                            href={button.link}
                            variant={button.variant || 'primary'}
                        >
                            {button.text}
                        </Button>
                    </div>
                )}
            </div>
        )}

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-auto-fit gap-8 auto-rows-fr">
            {features.map((feature, index) => (
                <div 
                    class="p-6 rounded-lg border flex flex-col"
                    style="border-color: rgba(255,255,255,0.2);" 
                    data-aos="fade-up"
                    data-aos-delay={index * 100}
                >
                    <div 
                        class="w-12 h-12 flex items-center justify-center rounded-lg mb-4"
                        style="background-color: var(--color-primary, #2563eb);"
                    >
                        <feature.icon
                            size={24}
                            style="color: var(--color-on-primary, #fff);"
                        />
                    </div>
                    <h3 class="text-h4 mb-2">{feature.title}</h3>
                    <p class="text-base opacity-90">{feature.description}</p>
                </div>
            ))}
        </div>
    </div>
</section>

<style>
    .grid-cols-auto-fit {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
</style>
